name: Weekly dataset snapshot

on:
  schedule:
    - cron: "0 3 * * 1" # Mondays 03:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-snapshot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set snapshot date
        id: vars
        run: echo "SNAPSHOT=$(date -u +%F)" >> "$GITHUB_OUTPUT"

      # (Optional) Python if/when needed later
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Pipeline (stub)
        run: |
          mkdir -p data/current
          SNAP="${{ steps.vars.outputs.SNAPSHOT }}"
          cat > data/current/global.json <<'JSON'
          {
            "generated_at": "__STAMP__",
            "stats": { "asns_total": 120000, "ipv4_announced": 2800000000, "ipv6_announced": 0 },
            "top": {
              "ipv4": [
                { "asn": 15169, "name": "GOOGLE", "org": "Google LLC", "country": "US", "v4_slash24s": 32768 },
                { "asn": 8075,  "name": "MICROSOFT", "org": "Microsoft", "country": "US", "v4_slash24s": 24576 },
                { "asn": 4837,  "name": "CHINA169-BACKBONE", "org": "China Unicom", "country": "CN", "v4_slash24s": 16384 }
              ],
              "ipv6": [
                { "asn": 15169, "name": "GOOGLE", "org": "Google LLC", "country": "US", "v6_slots": 2048 },
                { "asn": 8075,  "name": "MICROSOFT", "org": "Microsoft", "country": "US", "v6_slots": 1536 }
              ]
            }
          }
          JSON
          # Stamp generated_at with UTC time
          sed -i.bak "s/__STAMP__/$(date -u +%FT%TZ)/" data/current/global.json && rm -f data/current/global.json.bak

          # Copy to dated snapshot folder
          mkdir -p "data/snapshots/$SNAP"
          cp data/current/global.json "data/snapshots/$SNAP/global.json"

      - name: Commit snapshot
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(data): weekly snapshot ${{ steps.vars.outputs.SNAPSHOT }}"
          file_pattern: data/**