import Link from "next/link";
import Badge from "../../components/Badge";
import Stat from "../../components/Stat";
import Card, { CardHeader, CardContent } from "../../components/ui/Card";
import { loadGlobal, getAsnById } from "../../lib/data";

export const dynamicParams = false;

export async function generateStaticParams() {
  const g = await loadGlobal();
  const ids = Array.from(
    new Set([
      ...g.top.ipv4.map((r) => r.asn),
      ...g.top.ipv6.map((r) => r.asn),
    ])
  ).slice(0, 50);
  return ids.map((id) => ({ id: String(id) }));
}

export default async function AsnPage({ params }: { params: { id: string } }) {
  const g = await loadGlobal();
  const asn = getAsnById(g, Number(params.id));

  if (!asn) {
    return (
      <div className="space-y-4">
        <h1 className="text-2xl font-semibold">AS{params.id}</h1>
        <p className="text-gray-600">Not found in the current snapshot.</p>
        <Link className="text-indigo-600" href="/">← Back home</Link>
      </div>
    );
  }

  const fmt = (n: number) => n.toLocaleString("en-US");

  return (
    <div className="space-y-6">
      <div className="flex items-center gap-3">
        <h1 className="text-2xl font-semibold">AS{asn.asn} — {asn.name}</h1>
        <Badge>{asn.country}</Badge>
      </div>

      <div className="text-gray-600">
        <Link className="text-indigo-600" href={`/org/${encodeURIComponent(asn.org)}`}>{asn.org}</Link>
      </div>

      <div className="grid gap-4 sm:grid-cols-2">
        {"v4_slash24s" in asn && (
          <Stat label="IPv4 announced" value={fmt(asn.v4_slash24s)} hint="/24 equivalents" />
        )}
        {"v6_slots" in asn && (
          <Stat label="IPv6 announced" value={fmt(asn.v6_slots)} hint="/32 slots" />
        )}
      </div>

      <Card>
        <CardHeader>Links</CardHeader>
        <CardContent>
          <ul className="list-disc pl-5 space-y-1">
            <li><Link className="text-indigo-600" href={`/country/${asn.country}`}>Other ASNs in {asn.country}</Link></li>
            <li><Link className="text-indigo-600" href={`/top/ipv4`}>Top IPv4</Link></li>
            <li><Link className="text-indigo-600" href={`/top/ipv6`}>Top IPv6</Link></li>
          </ul>
        </CardContent>
      </Card>

      <div className="text-sm text-gray-500">
        Snapshot: {new Date(g.generated_at).toLocaleString()} • <Link className="text-indigo-600" href="/">Home</Link>
      </div>
    </div>
  );
}
